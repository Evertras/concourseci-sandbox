---
groups:
  - name: test
    jobs:
      - test-1.13
      - test-1.14
      - test-integration

  - name: pr
    jobs:
      - pr

resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
  - name: crudlib-git
    type: git
    icon: github
    source:
      uri: https://github.com/Evertras/concourseci-sandbox
      branch: master

  - name: crudlib-pr
    type: pull-request
    check_every: 24h
    source:
      repository: Evertras/concourseci-sandbox
      access_token: ((github.access-token))

  - name: golang-1.13.x-image
    type: registry-image
    icon: docker
    source:
      repository: golang
      tag: '1.13'

  - name: golang-1.14.x-image
    type: registry-image
    icon: docker
    source:
      repository: golang
      tag: '1.14'

config-test: &config-test
  inputs:
    - name: crudlib-git
  platform: linux
  run:
    dir: crudlib-git/crudlib
    path: "go"
    args:
      - test
      - -race
      - -v
      - .

config-test-integration: &config-test-integration
  inputs:
    - name: crudlib-git
  platform: linux
  params:
    TEST_INTEGRATION: 'true'
    # This is super dumb
    DOCKER_HOST: 'tcp://10.1.188.156:2375'
  run:
    dir: crudlib-git/crudlib
    path: "go"
    args:
      - test
      - -race
      - -v
      - .

config-lint: &config-lint
  inputs:
    - name: crudlib-git
  platform: linux
  run:
    dir: crudlib-git/crudlib
    path: "bash"
    args:
      - -exc
      # Make sure that go fmt doesn't have to do anything; if it did, then someone
      # didn't properly format their code!
      - |
        go mod download
        [[ -z "$(go fmt .)" ]]

jobs:
  - name: test-1.13
    plan:
      - get: crudlib-git
        trigger: true
      - get: golang-1.13.x-image
      - in_parallel:
        - task: test
          image: golang-1.13.x-image
          config:
            << : *config-test
        - task: lint
          image: golang-1.13.x-image
          config:
            << : *config-lint

  - name: test-1.14
    plan:
      # TMP: Manual run
      - get: crudlib-git
      - get: golang-1.14.x-image
      - in_parallel:
        - task: test
          image: golang-1.14.x-image
          config:
            << : *config-test
        - task: lint
          image: golang-1.14.x-image
          config:
            << : *config-lint

  - name: test-integration
    plan:
      - get: crudlib-git
        passed:
          - test-1.13
        trigger: true
      - get: golang-1.13.x-image
      - task: integration
        image: golang-1.13.x-image
        privileged: true
        config:
          << : *config-test-integration

  - name: pr
    plan:
      - get: golang-1.13.x-image
      - get: crudlib-pr
        trigger: true
      - put: crudlib-pr
        params:
          path: crudlib-pr
          status: pending
          comment: 'Autocomment: Running tests'
      - task: test
        image: golang-1.13.x-image
        config:
          inputs:
            - name: crudlib-pr
          platform: linux
          run:
            dir: crudlib-pr/crudlib
            path: "bash"
            args:
              - -exc
              - |
                go test -race -v .
                [[ -z "$(go fmt .)" ]]
        on_failure:
          put: crudlib-pr
          params:
            path: crudlib-pr
            status: failure
      - put: crudlib-pr
        params:
          path: crudlib-pr
          status: success

